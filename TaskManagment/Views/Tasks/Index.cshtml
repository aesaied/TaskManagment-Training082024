@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService _AuthorizationService
@{
    ViewData["Title"] = "Index";
}



@{

    bool canCreate =  _AuthorizationService.AuthorizeAsync(User, "AdminOnly").Result.Succeeded;
}

<div class="card">
    <div class="card-header container-fluid">
        <div class="row">
            <div class="col-md-10">
                <h3 class="w-75 p-3">Task List</h3>
            </div>
            <div class="col-md-2 float-right">

                @if (canCreate) //(User.IsInRole(SystemRoles.Admins))
                {
                    <a asp-action="Create" class="btn btn-primary">
                        Add
                    </a>
                }

            </div>
        </div>
    </div>
    <div class="card-body">

        <div class="table-responsive">

            <table class="table table-striped" id="tblTasks">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Title</th>
                        <th scope="col">Project Name</th>
                        <th scope="col">Created Date</th>
                        <th scope="col">Due date</th>
                        <th scope="col">has attachment</th>
                        <th scope="col">Current status</th>
                        <th scope="col">Actions</th>



                    </tr>
                </thead>
            </table>

        </div>

    </div>
</div>

@section Scripts {

    <partial name="_datatablesScripts" />
   <script>
       var taskJsonUrl = '@Url.Action("list-json")';

   </script>
    <script src="~/js/pages/tasks/index.js"></script>
  
}

@section Styles {

    <partial name="_datatablesStyles" />
}
